import { Box, Button, IconButton, Center, Drawer, DrawerBody, DrawerCloseButton, DrawerContent, DrawerOverlay, Flex, Image, Img, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';
import Link from 'next/link';
import Router, { useRouter } from 'next/router';
import React, { useCallback, useEffect, useState } from 'react';
import { AiOutlineArrowLeft } from 'react-icons/ai';
import { BsFillCartFill } from 'react-icons/bs';
import { FaSearch } from 'react-icons/fa';
import useUserDetails from '../../hooks/auth.hook';
import useCartInfo from '../../hooks/cart.hook';
import SideBar from '../DashboardLayout/components/SideBar';
import CategoryMenu from '../homepagecomponents/CategoryMenu';
import SiteSearch from '../SiteSearch';
import SiteSearchBarModal from './Modals/SiteSearchBarModal';
import dynamic from 'next/dynamic';
const Location = dynamic(import('./components/Location'), { ssr: false });
import { getCategories, getBrand } from '../../services/userCategories'

type props = {
    menu: boolean
}

interface CartBadgeProps {
    loading: boolean
    value: number
    className?: string
}

const CartBadge = ({ loading, value, className }: CartBadgeProps) => {
    // return null if cart is empty
    useEffect(() => {
        console.log(loading, "data", value)
    }, [])
    if (value <= 0)
        return null
    
    return (
        <Center background="red" position="absolute" top="-8px" right="-8px" borderRadius="20px" w="20px" h="20px" color="#fff">
            {loading ? "..." : value}
        </Center>
    )
}

export default function Navbar({ menu }: props) {
    // const el: any = document.querySelector('html'); 
    const [lastScrollY, setLastScrollY] = React.useState(0);
    const [show, setShow] = React.useState(false)
    const [showModal, setShowModal] = React.useState(false)
    const { isOpen, onOpen, onClose } = useDisclosure()
    const router = useRouter()
    const { userDetails, isLoggedIn } = useUserDetails()
    const [searchBarOpen, setSearchBarOpen] = useState<boolean>(false)
    const { cartInfo, cartLoading } = useCartInfo()
    const [categories, setCategories] = useState([])
    const [brand, setBrand] = useState([])
    const navigate = useRouter()
    const closeSearchBarModal = () => {
        setSearchBarOpen(!searchBarOpen)
    }

    async function fetchExistingCategories() {
        const result = await getCategories()
        const brandResult = await getBrand()
        if (brandResult.category) {
            setBrand(brandResult.category)
        }
        if (result.category) {
            setCategories(result.category);
        }
    }

    React.useEffect(() => {
        const el: any = document.querySelector('html');
        if (showModal) {
            el.style.overflow = 'hidden';
        } else {
            el.style.overflow = 'auto';
        }
        fetchExistingCategories()
    }, [showModal])

    const controlNavbar = useCallback(() => {
        if (typeof window !== 'undefined') {
            if (window.scrollY > lastScrollY) { // if scroll down hide the navbar
                setShow(false);
            } else { // if scroll up show the navbar
                setShow(true);
            }
            setLastScrollY(window.scrollY);
        }
    }, [lastScrollY])

    let user = false

    React.useEffect(() => {
        if (typeof window !== 'undefined') {
            window.addEventListener('scroll', controlNavbar);

            // cleanup function
            return () => {
                window.removeEventListener('scroll', controlNavbar);
                // Perform localStorage action
                if (localStorage.getItem("user")) {
                    user = true
                }
            };
        }
    }, [controlNavbar, lastScrollY]);

    return (
        <nav className=' lg:loginShadow w-full flex px-[11px] lg:px-[35px] h-[70px] lg:h-[89px] justify-between items-center ' >
            <Box className=' flex items-center ' >
                <Button flexDir="column" mt="7px" mr="20px" display={["flex", "flex", "flex", "none"]} colorScheme="white" onClick={() => onOpen()} >
                    <Box bg="black" mb="5px" className='w-[25px] h-[2px]' />
                    <Box bg="black" mb="5px" className='w-[25px] h-[2px]' />
                    <Box bg="black" mb="5px" className='w-[25px] h-[2px]' />
                    {/* <Box className=' w-[25px] h-[2px] bg-black mt-[3px] ' /> */}
                </Button>
                <Center cursor="pointer" ml="-20px" display={["flex", "flex", "flex", "none"]} h={["50px"]} w={["170px", "170px", "170px", "250px"]} onClick={() => Router.push("/")} className={menu ? ' hidden lg:flex' : ' flex'} >
                    <svg width="154" height="37" viewBox="0 0 124 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M69 1.54744C70.3943 1.53879 71.7885 1.53015 73.225 1.52124C73.8814 1.51551 73.8814 1.51551 74.5511 1.50967C74.9013 1.50845 75.2514 1.50738 75.6016 1.5065C75.7807 1.50436 75.9598 1.50221 76.1444 1.5C77.4734 1.49962 78.7655 1.604 79.8105 2.52565C80.8351 3.82098 81.046 5.07464 80.9053 6.71795C80.6931 7.69664 80.3127 8.59254 79.5368 9.23334C79.0935 9.49969 78.6409 9.72511 78.1684 9.93205C78.2446 9.99006 78.3208 10.0481 78.3993 10.1078C80.2336 11.6203 81.1067 14.1959 82 16.3603C82 16.4064 82 16.4525 82 16.5C80.4195 16.5 78.8389 16.5 77.2105 16.5C77.0407 16.1332 76.8708 15.7665 76.6958 15.3886C76.5295 15.0327 76.3626 14.6772 76.1957 14.3216C76.0803 14.075 75.9655 13.828 75.8514 13.5807C75.6868 13.2247 75.5201 12.8699 75.353 12.5151C75.3027 12.4049 75.2523 12.2947 75.2004 12.1811C74.9069 11.5645 74.656 11.1333 74.0632 10.7705C73.7471 10.6783 73.4309 10.5861 73.1053 10.491C73.1053 12.474 73.1053 14.4569 73.1053 16.5C71.7505 16.5 70.3958 16.5 69 16.5C69 11.5657 69 6.63131 69 1.54744ZM73.1053 4.6218C73.1053 5.63634 73.1053 6.65087 73.1053 7.69616C74.8951 7.80482 74.8951 7.80482 76.4836 7.08205C76.7807 6.71081 76.7763 6.34749 76.8 5.87949C76.6948 5.44994 76.5894 5.24299 76.2783 4.93622C75.619 4.55149 74.8965 4.60436 74.1572 4.61306C73.6365 4.61739 73.6365 4.61739 73.1053 4.6218Z" fill="black" />
                        <path d="M98 1.5C101.586 1.5 105.171 1.5 108.866 1.5C108.866 2.56402 108.866 3.62804 108.866 4.7243C106.652 4.7243 104.439 4.7243 102.159 4.7243C102.159 5.46449 102.159 6.20467 102.159 6.96729C104.195 6.96729 106.231 6.96729 108.329 6.96729C108.329 7.98505 108.329 9.0028 108.329 10.0514C106.293 10.0514 104.257 10.0514 102.159 10.0514C102.159 11.0229 102.159 11.9944 102.159 12.9953C104.416 12.9953 106.674 12.9953 109 12.9953C109 14.1519 109 15.3084 109 16.5C105.37 16.5 101.74 16.5 98 16.5C98 11.55 98 6.6 98 1.5Z" fill="black" />
                        <path d="M84 1.5C87.5857 1.5 91.1715 1.5 94.8659 1.5C94.8659 2.56402 94.8659 3.62804 94.8659 4.7243C92.6524 4.7243 90.439 4.7243 88.1585 4.7243C88.1585 5.46449 88.1585 6.20467 88.1585 6.96729C90.1949 6.96729 92.2312 6.96729 94.3293 6.96729C94.3293 7.98505 94.3293 9.0028 94.3293 10.0514C92.2929 10.0514 90.2566 10.0514 88.1585 10.0514C88.1585 11.0229 88.1585 11.9944 88.1585 12.9953C90.4162 12.9953 92.6739 12.9953 95 12.9953C95 14.1519 95 15.3084 95 16.5C91.37 16.5 87.74 16.5 84 16.5C84 11.55 84 6.6 84 1.5Z" fill="black" />
                        <path d="M21 1.5C24.9117 1.5 28.8234 1.5 32.8537 1.5C32.8537 2.56402 32.8537 3.62804 32.8537 4.7243C30.439 4.7243 28.0244 4.7243 25.5366 4.7243C25.5366 5.46449 25.5366 6.20467 25.5366 6.96729C27.758 6.96729 29.9795 6.96729 32.2683 6.96729C32.2683 7.98505 32.2683 9.0028 32.2683 10.0514C30.0468 10.0514 27.8254 10.0514 25.5366 10.0514C25.5366 11.0229 25.5366 11.9944 25.5366 12.9953C27.9995 12.9953 30.4624 12.9953 33 12.9953C33 14.1519 33 15.3084 33 16.5C29.04 16.5 25.08 16.5 21 16.5C21 11.55 21 6.6 21 1.5Z" fill="black" />
                        <path d="M50.9792 1.59161C51.9076 2.41 52.3593 3.50237 52.5406 4.74598C52.4822 5.07603 52.4822 5.07603 52.4048 5.31306C51.1314 5.42622 49.8811 5.47308 48.6032 5.45482C48.5121 5.24837 48.4217 5.04156 48.3317 4.83458C48.2813 4.71945 48.2309 4.60432 48.1789 4.4857C48.0601 4.1789 48.0601 4.1789 48.0601 3.89536C46.8867 3.5798 46.8867 3.5798 45.752 3.89536C45.4487 4.29352 45.4487 4.29352 45.455 4.73712C45.5697 5.17482 45.5697 5.17482 45.8495 5.32309C46.6376 5.67293 47.4279 5.92734 48.2553 6.15481C49.8212 6.60686 51.4407 7.12444 52.3465 8.64906C52.9662 9.90621 53.1736 11.1535 52.8455 12.5555C52.4087 13.8612 51.7187 15.0906 50.5067 15.7359C48.5022 16.6205 45.9627 16.7901 43.9037 15.9635C42.7252 15.3834 41.8691 14.4488 41.3776 13.1835C41.1786 12.5142 41.0554 11.824 41 11.1256C41.4385 10.6677 43.0659 10.8438 43.7001 10.8332C44.1126 10.8332 44.5249 10.8355 44.9374 10.8421C44.9671 10.9464 44.9969 11.0508 45.0275 11.1583C45.3063 12.0538 45.4951 12.6375 46.2951 13.1104C46.9125 13.2963 47.4489 13.3214 48.0516 13.0749C48.494 12.8539 48.494 12.8539 48.739 12.4015C48.8466 11.5829 48.8466 11.5829 48.4595 10.8985C48.0092 10.5151 47.5925 10.3562 47.0418 10.2041C46.8476 10.1453 46.6535 10.086 46.4595 10.0263C46.3632 9.99707 46.2669 9.9678 46.1677 9.93766C44.3432 9.36413 42.7687 8.67975 41.8109 6.89633C41.3427 5.82619 41.381 4.51892 41.7552 3.42575C42.3196 2.16084 43.1448 1.40116 44.3943 0.918208C46.4548 0.258339 49.1532 0.306476 50.9792 1.59161Z" fill="black" />
                        <path d="M12.8415 1.50415C12.9671 1.50278 13.0928 1.50141 13.2222 1.5C14.809 1.51989 16.1031 2.00574 17.2907 3.0253C18.0901 3.83533 18.6594 5.01285 18.8626 6.10941C18.3475 6.24421 17.832 6.37753 17.3165 6.51059C17.1703 6.54886 17.0242 6.58713 16.8736 6.62656C16.7328 6.66276 16.5919 6.69896 16.4468 6.73626C16.3173 6.76987 16.1877 6.80349 16.0543 6.83812C15.7017 6.91178 15.7017 6.91178 15.152 6.91178C15.1187 6.84075 15.0854 6.76973 15.0511 6.69656C14.614 5.75351 14.614 5.75351 13.7557 5.20204C13.0308 5.01996 12.4221 4.99046 11.7222 5.26891C11.0423 5.68507 10.7245 6.29089 10.5009 7.02513C10.182 8.64004 10.1479 10.8033 11.0291 12.2609C11.5161 12.7132 11.9813 12.8908 12.6574 12.9426C13.361 12.9115 13.968 12.7094 14.5078 12.2693C14.8685 11.6322 15.0753 10.9498 15.2894 10.255C16.1641 10.4305 16.9965 10.6578 17.8404 10.9403C17.9529 10.9774 18.0653 11.0145 18.1811 11.0526C18.4542 11.1428 18.7271 11.2337 19 11.3248C18.7767 12.8535 18.1472 14.2974 16.9386 15.3366C15.1934 16.5818 13.0993 16.6389 11.0059 16.3679C9.50401 16.0836 8.34708 15.3039 7.47319 14.0997C6.95923 13.3506 6.59561 12.5959 6.35658 11.726C6.32593 11.6189 6.29529 11.5119 6.26371 11.4016C5.83194 9.56381 5.94544 7.50604 6.49401 5.70822C6.53068 5.5879 6.56735 5.46758 6.60513 5.34361C7.11636 3.91534 8.159 2.81255 9.51744 2.09756C10.6084 1.59009 11.6497 1.51415 12.8415 1.50415Z" fill="black" />
                        <path d="M111 1.5C115.29 1.5 119.58 1.5 124 1.5C124 2.74907 124 3.99813 124 5.28505C122.539 5.28505 121.077 5.28505 119.571 5.28505C119.571 8.98598 119.571 12.6869 119.571 16.5C118.157 16.5 116.743 16.5 115.286 16.5C115.286 12.7991 115.286 9.09813 115.286 5.28505C113.871 5.28505 112.457 5.28505 111 5.28505C111 4.03598 111 2.78692 111 1.5Z" fill="black" />
                        <path d="M55 1.5C58.96 1.5 62.92 1.5 67 1.5C67 2.74907 67 3.99813 67 5.28505C65.651 5.28505 64.302 5.28505 62.9121 5.28505C62.9121 8.98598 62.9121 12.6869 62.9121 16.5C61.6066 16.5 60.3011 16.5 58.956 16.5C58.956 12.7991 58.956 9.09813 58.956 5.28505C57.6505 5.28505 56.3451 5.28505 55 5.28505C55 4.03598 55 2.78692 55 1.5Z" fill="black" />
                        <path d="M0 1.5C1.32 1.5 2.64 1.5 4 1.5C4 6.45 4 11.4 4 16.5C2.68 16.5 1.36 16.5 0 16.5C0 11.55 0 6.6 0 1.5Z" fill="black" />
                    </svg>

                </Center>
                <Center cursor="pointer" ml="-20px" display={["none", "none", "none", "flex"]} h={["50px"]} w={["170px", "170px", "170px", "250px"]} onClick={() => Router.push("/")} className={menu ? ' hidden lg:flex items-center ' : ' flex items-center '} >
                    <svg width="184" height="57" viewBox="0 0 124 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M69 1.54744C70.3943 1.53879 71.7885 1.53015 73.225 1.52124C73.8814 1.51551 73.8814 1.51551 74.5511 1.50967C74.9013 1.50845 75.2514 1.50738 75.6016 1.5065C75.7807 1.50436 75.9598 1.50221 76.1444 1.5C77.4734 1.49962 78.7655 1.604 79.8105 2.52565C80.8351 3.82098 81.046 5.07464 80.9053 6.71795C80.6931 7.69664 80.3127 8.59254 79.5368 9.23334C79.0935 9.49969 78.6409 9.72511 78.1684 9.93205C78.2446 9.99006 78.3208 10.0481 78.3993 10.1078C80.2336 11.6203 81.1067 14.1959 82 16.3603C82 16.4064 82 16.4525 82 16.5C80.4195 16.5 78.8389 16.5 77.2105 16.5C77.0407 16.1332 76.8708 15.7665 76.6958 15.3886C76.5295 15.0327 76.3626 14.6772 76.1957 14.3216C76.0803 14.075 75.9655 13.828 75.8514 13.5807C75.6868 13.2247 75.5201 12.8699 75.353 12.5151C75.3027 12.4049 75.2523 12.2947 75.2004 12.1811C74.9069 11.5645 74.656 11.1333 74.0632 10.7705C73.7471 10.6783 73.4309 10.5861 73.1053 10.491C73.1053 12.474 73.1053 14.4569 73.1053 16.5C71.7505 16.5 70.3958 16.5 69 16.5C69 11.5657 69 6.63131 69 1.54744ZM73.1053 4.6218C73.1053 5.63634 73.1053 6.65087 73.1053 7.69616C74.8951 7.80482 74.8951 7.80482 76.4836 7.08205C76.7807 6.71081 76.7763 6.34749 76.8 5.87949C76.6948 5.44994 76.5894 5.24299 76.2783 4.93622C75.619 4.55149 74.8965 4.60436 74.1572 4.61306C73.6365 4.61739 73.6365 4.61739 73.1053 4.6218Z" fill="black" />
                        <path d="M98 1.5C101.586 1.5 105.171 1.5 108.866 1.5C108.866 2.56402 108.866 3.62804 108.866 4.7243C106.652 4.7243 104.439 4.7243 102.159 4.7243C102.159 5.46449 102.159 6.20467 102.159 6.96729C104.195 6.96729 106.231 6.96729 108.329 6.96729C108.329 7.98505 108.329 9.0028 108.329 10.0514C106.293 10.0514 104.257 10.0514 102.159 10.0514C102.159 11.0229 102.159 11.9944 102.159 12.9953C104.416 12.9953 106.674 12.9953 109 12.9953C109 14.1519 109 15.3084 109 16.5C105.37 16.5 101.74 16.5 98 16.5C98 11.55 98 6.6 98 1.5Z" fill="black" />
                        <path d="M84 1.5C87.5857 1.5 91.1715 1.5 94.8659 1.5C94.8659 2.56402 94.8659 3.62804 94.8659 4.7243C92.6524 4.7243 90.439 4.7243 88.1585 4.7243C88.1585 5.46449 88.1585 6.20467 88.1585 6.96729C90.1949 6.96729 92.2312 6.96729 94.3293 6.96729C94.3293 7.98505 94.3293 9.0028 94.3293 10.0514C92.2929 10.0514 90.2566 10.0514 88.1585 10.0514C88.1585 11.0229 88.1585 11.9944 88.1585 12.9953C90.4162 12.9953 92.6739 12.9953 95 12.9953C95 14.1519 95 15.3084 95 16.5C91.37 16.5 87.74 16.5 84 16.5C84 11.55 84 6.6 84 1.5Z" fill="black" />
                        <path d="M21 1.5C24.9117 1.5 28.8234 1.5 32.8537 1.5C32.8537 2.56402 32.8537 3.62804 32.8537 4.7243C30.439 4.7243 28.0244 4.7243 25.5366 4.7243C25.5366 5.46449 25.5366 6.20467 25.5366 6.96729C27.758 6.96729 29.9795 6.96729 32.2683 6.96729C32.2683 7.98505 32.2683 9.0028 32.2683 10.0514C30.0468 10.0514 27.8254 10.0514 25.5366 10.0514C25.5366 11.0229 25.5366 11.9944 25.5366 12.9953C27.9995 12.9953 30.4624 12.9953 33 12.9953C33 14.1519 33 15.3084 33 16.5C29.04 16.5 25.08 16.5 21 16.5C21 11.55 21 6.6 21 1.5Z" fill="black" />
                        <path d="M50.9792 1.59161C51.9076 2.41 52.3593 3.50237 52.5406 4.74598C52.4822 5.07603 52.4822 5.07603 52.4048 5.31306C51.1314 5.42622 49.8811 5.47308 48.6032 5.45482C48.5121 5.24837 48.4217 5.04156 48.3317 4.83458C48.2813 4.71945 48.2309 4.60432 48.1789 4.4857C48.0601 4.1789 48.0601 4.1789 48.0601 3.89536C46.8867 3.5798 46.8867 3.5798 45.752 3.89536C45.4487 4.29352 45.4487 4.29352 45.455 4.73712C45.5697 5.17482 45.5697 5.17482 45.8495 5.32309C46.6376 5.67293 47.4279 5.92734 48.2553 6.15481C49.8212 6.60686 51.4407 7.12444 52.3465 8.64906C52.9662 9.90621 53.1736 11.1535 52.8455 12.5555C52.4087 13.8612 51.7187 15.0906 50.5067 15.7359C48.5022 16.6205 45.9627 16.7901 43.9037 15.9635C42.7252 15.3834 41.8691 14.4488 41.3776 13.1835C41.1786 12.5142 41.0554 11.824 41 11.1256C41.4385 10.6677 43.0659 10.8438 43.7001 10.8332C44.1126 10.8332 44.5249 10.8355 44.9374 10.8421C44.9671 10.9464 44.9969 11.0508 45.0275 11.1583C45.3063 12.0538 45.4951 12.6375 46.2951 13.1104C46.9125 13.2963 47.4489 13.3214 48.0516 13.0749C48.494 12.8539 48.494 12.8539 48.739 12.4015C48.8466 11.5829 48.8466 11.5829 48.4595 10.8985C48.0092 10.5151 47.5925 10.3562 47.0418 10.2041C46.8476 10.1453 46.6535 10.086 46.4595 10.0263C46.3632 9.99707 46.2669 9.9678 46.1677 9.93766C44.3432 9.36413 42.7687 8.67975 41.8109 6.89633C41.3427 5.82619 41.381 4.51892 41.7552 3.42575C42.3196 2.16084 43.1448 1.40116 44.3943 0.918208C46.4548 0.258339 49.1532 0.306476 50.9792 1.59161Z" fill="black" />
                        <path d="M12.8415 1.50415C12.9671 1.50278 13.0928 1.50141 13.2222 1.5C14.809 1.51989 16.1031 2.00574 17.2907 3.0253C18.0901 3.83533 18.6594 5.01285 18.8626 6.10941C18.3475 6.24421 17.832 6.37753 17.3165 6.51059C17.1703 6.54886 17.0242 6.58713 16.8736 6.62656C16.7328 6.66276 16.5919 6.69896 16.4468 6.73626C16.3173 6.76987 16.1877 6.80349 16.0543 6.83812C15.7017 6.91178 15.7017 6.91178 15.152 6.91178C15.1187 6.84075 15.0854 6.76973 15.0511 6.69656C14.614 5.75351 14.614 5.75351 13.7557 5.20204C13.0308 5.01996 12.4221 4.99046 11.7222 5.26891C11.0423 5.68507 10.7245 6.29089 10.5009 7.02513C10.182 8.64004 10.1479 10.8033 11.0291 12.2609C11.5161 12.7132 11.9813 12.8908 12.6574 12.9426C13.361 12.9115 13.968 12.7094 14.5078 12.2693C14.8685 11.6322 15.0753 10.9498 15.2894 10.255C16.1641 10.4305 16.9965 10.6578 17.8404 10.9403C17.9529 10.9774 18.0653 11.0145 18.1811 11.0526C18.4542 11.1428 18.7271 11.2337 19 11.3248C18.7767 12.8535 18.1472 14.2974 16.9386 15.3366C15.1934 16.5818 13.0993 16.6389 11.0059 16.3679C9.50401 16.0836 8.34708 15.3039 7.47319 14.0997C6.95923 13.3506 6.59561 12.5959 6.35658 11.726C6.32593 11.6189 6.29529 11.5119 6.26371 11.4016C5.83194 9.56381 5.94544 7.50604 6.49401 5.70822C6.53068 5.5879 6.56735 5.46758 6.60513 5.34361C7.11636 3.91534 8.159 2.81255 9.51744 2.09756C10.6084 1.59009 11.6497 1.51415 12.8415 1.50415Z" fill="black" />
                        <path d="M111 1.5C115.29 1.5 119.58 1.5 124 1.5C124 2.74907 124 3.99813 124 5.28505C122.539 5.28505 121.077 5.28505 119.571 5.28505C119.571 8.98598 119.571 12.6869 119.571 16.5C118.157 16.5 116.743 16.5 115.286 16.5C115.286 12.7991 115.286 9.09813 115.286 5.28505C113.871 5.28505 112.457 5.28505 111 5.28505C111 4.03598 111 2.78692 111 1.5Z" fill="black" />
                        <path d="M55 1.5C58.96 1.5 62.92 1.5 67 1.5C67 2.74907 67 3.99813 67 5.28505C65.651 5.28505 64.302 5.28505 62.9121 5.28505C62.9121 8.98598 62.9121 12.6869 62.9121 16.5C61.6066 16.5 60.3011 16.5 58.956 16.5C58.956 12.7991 58.956 9.09813 58.956 5.28505C57.6505 5.28505 56.3451 5.28505 55 5.28505C55 4.03598 55 2.78692 55 1.5Z" fill="black" />
                        <path d="M0 1.5C1.32 1.5 2.64 1.5 4 1.5C4 6.45 4 11.4 4 16.5C2.68 16.5 1.36 16.5 0 16.5C0 11.55 0 6.6 0 1.5Z" fill="black" />
                    </svg>

                </Center>
            </Box>
            <Center w="full">
                <Center w="350px" display={["none", "none", "none", "flex"]} justifyContent="space-between">
                    <Button colorScheme="white" color="#000" mr="10px">
                        <Link href="/arrival">
                            NEW IN
                        </Link>
                    </Button>
                    <Button colorScheme="white" color="#000" mr="10px">
                        <Link href="/gender/men">
                            MEN
                        </Link>
                    </Button>
                    <Button colorScheme="white" color="#000" mr="10px">
                        <Link href="/gender/women">
                            WOMEN
                        </Link>
                    </Button>
                    <Button colorScheme="white" color="#000">
                        <Link href="/collection">
                            COLLECTIONS
                        </Link>
                    </Button>
                </Center>
            </Center>
            <Box className='hidden lg:flex items-center ml-auto mr-12 ' >
                <Link href={"/cart"} className=' text-sm font-semibold ml-6 flex items-center ' >
                    <Box _hover={{ color: "#0dadf7" }} pos="relative" color={router.pathname === "/cart" ? "#0dadf7" : ""} justifyContent="center" display="flex" alignItems="center">
                        <svg width="32" height="33" viewBox="0 0 32 33" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8.44131 11.1667H23.56C23.9445 11.1666 24.3244 11.2497 24.6738 11.4103C25.0232 11.5708 25.3337 11.805 25.584 12.0968C25.8344 12.3886 26.0187 12.7311 26.1244 13.1008C26.23 13.4705 26.2544 13.8587 26.196 14.2387L24.5226 25.108C24.3774 26.0526 23.8987 26.914 23.1733 27.5362C22.4479 28.1584 21.5237 28.5003 20.568 28.5H11.432C10.4765 28.5 9.55261 28.1579 8.82748 27.5357C8.10235 26.9136 7.62387 26.0524 7.47864 25.108L5.80531 14.2387C5.74687 13.8587 5.77129 13.4705 5.87691 13.1008C5.98254 12.7311 6.16686 12.3886 6.41724 12.0968C6.66761 11.805 6.97813 11.5708 7.3275 11.4103C7.67686 11.2497 8.05682 11.1666 8.44131 11.1667Z" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M12 15.1667V8.5C12 7.43913 12.4214 6.42172 13.1716 5.67157C13.9217 4.92143 14.9391 4.5 16 4.5C17.0609 4.5 18.0783 4.92143 18.8284 5.67157C19.5786 6.42172 20 7.43913 20 8.5V15.1667" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <CartBadge loading={cartLoading} value={cartInfo?.itemsQuantity ?? 0} />
                    </Box>
                </Link>
                <button
                    style={{ marginLeft: 5 }}
                    onClick={() => Router.push("/search")}
                    className={`flex items-center flex-col`}  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" style={{ "fill": "rgba(0, 0, 0, 1)", "transform": "msFilter" }}><path d="M10 18a7.952 7.952 0 0 0 4.897-1.688l4.396 4.396 1.414-1.414-4.396-4.396A7.952 7.952 0 0 0 18 10c0-4.411-3.589-8-8-8s-8 3.589-8 8 3.589 8 8 8zm0-14c3.309 0 6 2.691 6 6s-2.691 6-6 6-6-2.691-6-6 2.691-6 6-6z"></path></svg>
                </button>
                <Box ml="5px" display={["none", "none", "none", "flex"]} _hover={{ color: "#0dadf7" }} color={router.pathname === "/dashboard" ? "#0dadf7" : ""}>
                    <button onClick={() => { if (!isLoggedIn) { Router.push("/login") } else { Router.push("/dashboard") } }} className=' text-sm font-semibold ' >{user ? "Login/Sign up" :
                        <Center>
                            <svg width="32" height="33" viewBox="0 0 32 33" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8.224 25.632C8.55401 24.5336 9.22929 23.5709 10.1497 22.8866C11.07 22.2024 12.1865 21.833 13.3333 21.8333H18.6667C19.815 21.8329 20.9328 22.2032 21.8538 22.889C22.7749 23.5749 23.45 24.5397 23.7787 25.64M4 16.5C4 18.0759 4.31039 19.6363 4.91345 21.0922C5.5165 22.5481 6.40042 23.871 7.51472 24.9853C8.62902 26.0996 9.95189 26.9835 11.4078 27.5866C12.8637 28.1896 14.4241 28.5 16 28.5C17.5759 28.5 19.1363 28.1896 20.5922 27.5866C22.0481 26.9835 23.371 26.0996 24.4853 24.9853C25.5996 23.871 26.4835 22.5481 27.0866 21.0922C27.6896 19.6363 28 18.0759 28 16.5C28 14.9241 27.6896 13.3637 27.0866 11.9078C26.4835 10.4519 25.5996 9.12902 24.4853 8.01472C23.371 6.90042 22.0481 6.0165 20.5922 5.41345C19.1363 4.81039 17.5759 4.5 16 4.5C14.4241 4.5 12.8637 4.81039 11.4078 5.41345C9.95189 6.0165 8.62902 6.90042 7.51472 8.01472C6.40042 9.12902 5.5165 10.4519 4.91345 11.9078C4.31039 13.3637 4 14.9241 4 16.5ZM12 13.8333C12 14.8942 12.4214 15.9116 13.1716 16.6618C13.9217 17.4119 14.9391 17.8333 16 17.8333C17.0609 17.8333 18.0783 17.4119 18.8284 16.6618C19.5786 15.9116 20 14.8942 20 13.8333C20 12.7725 19.5786 11.7551 18.8284 11.0049C18.0783 10.2548 17.0609 9.83333 16 9.83333C14.9391 9.83333 13.9217 10.2548 13.1716 11.0049C12.4214 11.7551 12 12.7725 12 13.8333Z" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </Center>
                    }</button>
                </Box>
            </Box>
            <Box display={["none", "none", "none", "none", "flex"]}>
                <Location />
            </Box>
            {/* start of mobile nav */}
            <Box alignItems="center" className=' lg:hidden flex ml-auto' >
                <Link href={"/cart"} className=' text-sm font-semibold ml-6 flex items-center ' >
                    <Box _hover={{ color: "#0dadf7" }} pos="relative" color={router.pathname === "/cart" ? "#0dadf7" : ""} justifyContent="center" display="flex" alignItems="center">
                        <svg width="32" height="33" viewBox="0 0 32 33" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8.44131 11.1667H23.56C23.9445 11.1666 24.3244 11.2497 24.6738 11.4103C25.0232 11.5708 25.3337 11.805 25.584 12.0968C25.8344 12.3886 26.0187 12.7311 26.1244 13.1008C26.23 13.4705 26.2544 13.8587 26.196 14.2387L24.5226 25.108C24.3774 26.0526 23.8987 26.914 23.1733 27.5362C22.4479 28.1584 21.5237 28.5003 20.568 28.5H11.432C10.4765 28.5 9.55261 28.1579 8.82748 27.5357C8.10235 26.9136 7.62387 26.0524 7.47864 25.108L5.80531 14.2387C5.74687 13.8587 5.77129 13.4705 5.87691 13.1008C5.98254 12.7311 6.16686 12.3886 6.41724 12.0968C6.66761 11.805 6.97813 11.5708 7.3275 11.4103C7.67686 11.2497 8.05682 11.1666 8.44131 11.1667Z" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M12 15.1667V8.5C12 7.43913 12.4214 6.42172 13.1716 5.67157C13.9217 4.92143 14.9391 4.5 16 4.5C17.0609 4.5 18.0783 4.92143 18.8284 5.67157C19.5786 6.42172 20 7.43913 20 8.5V15.1667" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <CartBadge loading={cartLoading} value={cartInfo?.itemsQuantity ?? 0} />
                    </Box>
                </Link>
                <Location />
            </Box>
            {
                <Box style={{ boxShadow: "0px -1px 1px 0px #00000033" }} className=' text-xs lg:hidden text-[#434343] font-medium w-full bg-white left-0 right-0 px-[14px] flex justify-between items-center fixed bottom-0 h-[60px] ' >
                    <button className={` flex items-center flex-col`} onClick={() => Router.push("/")}>
                        <svg width="29" height="30" viewBox="0 0 29 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21.1663 19.9998C17.483 22.2215 11.513 22.2215 7.83301 19.9998M26.1668 9.51612L17.2785 2.60279C16.4984 1.99597 15.5384 1.6665 14.5501 1.6665C13.5619 1.6665 12.6018 1.99597 11.8218 2.60279L2.9318 9.51612C2.39754 9.93159 1.96529 10.4637 1.66806 11.0717C1.37083 11.6797 1.21648 12.3477 1.2168 13.0245V25.0245C1.2168 25.9085 1.56799 26.7564 2.19311 27.3815C2.81823 28.0066 3.66608 28.3578 4.55013 28.3578H24.5501C25.4342 28.3578 26.282 28.0066 26.9072 27.3815C27.5323 26.7564 27.8835 25.9085 27.8835 25.0245V13.0245C27.8835 11.6528 27.2501 10.3578 26.1668 9.51612Z" stroke={router.pathname === "/" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <p className={` mt-[3px] ${router.pathname === "/" ? "text-[#0dadf7]" : "text-[#434343]"}`} >Home</p>
                    </button>
                    <button onClick={() => Router.push("/collection")} className=' flex items-center flex-col ' >
                        <svg width="30" height="30" viewBox="0 0 30 30" fill="none">
                            <path d="M1.66699 4.99984C1.66699 4.11578 2.01818 3.26794 2.6433 2.64281C3.26842 2.01769 4.11627 1.6665 5.00033 1.6665H8.33366C9.21771 1.6665 10.0656 2.01769 10.6907 2.64281C11.3158 3.26794 11.667 4.11578 11.667 4.99984V6.6665C11.667 7.55056 11.3158 8.3984 10.6907 9.02353C10.0656 9.64865 9.21771 9.99984 8.33366 9.99984H5.00033C4.11627 9.99984 3.26842 9.64865 2.6433 9.02353C2.01818 8.3984 1.66699 7.55056 1.66699 6.6665V4.99984Z" stroke={router.pathname === "/create-package" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M1.66699 19.9998C1.66699 19.1158 2.01818 18.2679 2.6433 17.6428C3.26842 17.0177 4.11627 16.6665 5.00033 16.6665H8.33366C9.21771 16.6665 10.0656 17.0177 10.6907 17.6428C11.3158 18.2679 11.667 19.1158 11.667 19.9998V24.9998C11.667 25.8839 11.3158 26.7317 10.6907 27.3569C10.0656 27.982 9.21771 28.3332 8.33366 28.3332H5.00033C4.11627 28.3332 3.26842 27.982 2.6433 27.3569C2.01818 26.7317 1.66699 25.8839 1.66699 24.9998V19.9998Z" stroke={router.pathname === "/create-package" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M18.3337 4.99984C18.3337 4.11578 18.6848 3.26794 19.31 2.64281C19.9351 2.01769 20.7829 1.6665 21.667 1.6665H25.0003C25.8844 1.6665 26.7322 2.01769 27.3573 2.64281C27.9825 3.26794 28.3337 4.11578 28.3337 4.99984V9.99984C28.3337 10.8839 27.9825 11.7317 27.3573 12.3569C26.7322 12.982 25.8844 13.3332 25.0003 13.3332H21.667C20.7829 13.3332 19.9351 12.982 19.31 12.3569C18.6848 11.7317 18.3337 10.8839 18.3337 9.99984V4.99984Z" stroke={router.pathname === "/create-package" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M18.3337 23.3332C18.3337 22.4491 18.6848 21.6013 19.31 20.9761C19.9351 20.351 20.7829 19.9998 21.667 19.9998H25.0003C25.8844 19.9998 26.7322 20.351 27.3573 20.9761C27.9825 21.6013 28.3337 22.4491 28.3337 23.3332V24.9998C28.3337 25.8839 27.9825 26.7317 27.3573 27.3569C26.7322 27.982 25.8844 28.3332 25.0003 28.3332H21.667C20.7829 28.3332 19.9351 27.982 19.31 27.3569C18.6848 26.7317 18.3337 25.8839 18.3337 24.9998V23.3332Z" stroke={router.pathname === "/create-package" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>

                        <p className={` mt-[3px] ${router.pathname === "/collection" ? "text-[#0dadf7]" : "text-[#434343]"}`} >Collection</p>
                    </button>
                    <button
                        onClick={() => Router.push("/search")}
                        className={`flex items-center flex-col`}  >
                        <svg width="30" height="30" viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M31.5 31L21.5 21M1.5 12.6667C1.5 14.1988 1.80177 15.7158 2.38807 17.1313C2.97438 18.5468 3.83374 19.8329 4.91709 20.9162C6.00044 21.9996 7.28656 22.859 8.70203 23.4453C10.1175 24.0316 11.6346 24.3333 13.1667 24.3333C14.6988 24.3333 16.2158 24.0316 17.6313 23.4453C19.0468 22.859 20.3329 21.9996 21.4162 20.9162C22.4996 19.8329 23.359 18.5468 23.9453 17.1313C24.5316 15.7158 24.8333 14.1988 24.8333 12.6667C24.8333 11.1346 24.5316 9.61749 23.9453 8.20203C23.359 6.78656 22.4996 5.50044 21.4162 4.41709C20.3329 3.33374 19.0468 2.47438 17.6313 1.88807C16.2158 1.30177 14.6988 1 13.1667 1C11.6346 1 10.1175 1.30177 8.70203 1.88807C7.28656 2.47438 6.00044 3.33374 4.91709 4.41709C3.83374 5.50044 2.97438 6.78656 2.38807 8.20203C1.80177 9.61749 1.5 11.1346 1.5 12.6667Z" stroke={router.pathname === "/search" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>

                        <p className={` mt-[3px] ${router.pathname === "/search" ? "#0dadf7" : "#434343"}`} >Search</p>
                    </button>
                    <button onClick={() => {
                        localStorage.getItem("user") ?
                            setShowModal(true) :
                            Router.push("/login")
                    }} className=' flex items-center flex-col ' >
                        <svg width="23" height="32" viewBox="0 0 23 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M1.5 31V27.6667C1.5 25.8986 2.20238 24.2029 3.45262 22.9526C4.70286 21.7024 6.39856 21 8.16667 21H14.8333C16.6014 21 18.2971 21.7024 19.5474 22.9526C20.7976 24.2029 21.5 25.8986 21.5 27.6667V31M4.83333 7.66667C4.83333 9.43478 5.53571 11.1305 6.78595 12.3807C8.0362 13.631 9.73189 14.3333 11.5 14.3333C13.2681 14.3333 14.9638 13.631 16.214 12.3807C17.4643 11.1305 18.1667 9.43478 18.1667 7.66667C18.1667 5.89856 17.4643 4.20286 16.214 2.95262C14.9638 1.70238 13.2681 1 11.5 1C9.73189 1 8.0362 1.70238 6.78595 2.95262C5.53571 4.20286 4.83333 5.89856 4.83333 7.66667Z" stroke={router.pathname === "/dashboard" ? "#0dadf7" : "#434343"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <p className={` mt-[3px] ${showModal ? "text-[#0dadf7]" : "text-[#434343]"}`} > Account
                        </p>
                    </button>
                </Box>

            }
            {/* end of footer nav */}
            <Box>
                <Drawer
                    isOpen={isOpen}
                    placement='left'
                    onClose={onClose}
                >
                    <DrawerOverlay />
                    <DrawerContent>
                        <DrawerCloseButton />
                        <DrawerBody>
                            <SideBar show={setShow} />
                        </DrawerBody>
                    </DrawerContent>
                </Drawer>
            </Box>
            {
                showModal && (
                    <Box onClick={() => setShowModal(false)} className=' fixed w-0 h-0 z-50 before:fixed before:inset-0 before:bg-gray-900 before:w-screen before:h-screen before:opacity-5' >
                        <CategoryMenu />
                    </Box>
                )
            }
            {/* modals */}
            <SiteSearchBarModal isOpen={searchBarOpen} onClose={closeSearchBarModal} />
        </nav >
    )
} 